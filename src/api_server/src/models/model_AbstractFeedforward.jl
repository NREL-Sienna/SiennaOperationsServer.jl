# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.



@doc raw"""
    AbstractFeedforward(; value=nothing)
"""
mutable struct AbstractFeedforward <: OpenAPI.OneOfAPIModel
    value::Any # Union{ EnergyLimitFeedforward, FixValueFeedforward, SemiContinuousFeedforward }
    AbstractFeedforward() = new()
    AbstractFeedforward(value) = new(value)
end # type AbstractFeedforward

function OpenAPI.property_type(::Type{ AbstractFeedforward }, name::Symbol, json::Dict{String,Any})
    discriminator = json["feedforward_type"]
    if discriminator == "EnergyLimitFeedforward"
        return eval(Base.Meta.parse("EnergyLimitFeedforward"))
    elseif discriminator == "FixValueFeedforward"
        return eval(Base.Meta.parse("FixValueFeedforward"))
    elseif discriminator == "SemiContinuousFeedforward"
        return eval(Base.Meta.parse("SemiContinuousFeedforward"))
    end
    throw(OpenAPI.ValidationException("Invalid discriminator value: $discriminator for AbstractFeedforward"))
end
