# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""
    XpressOptimizer(;
        optimizer_type=nothing,
        MIPRELSTOP=0.0000010,
    )

    - optimizer_type::String
    - MIPRELSTOP::Float64
"""
Base.@kwdef mutable struct XpressOptimizer <: OpenAPI.APIModel
    optimizer_type::Union{Nothing, String} = nothing
    MIPRELSTOP::Union{Nothing, Float64} = 0.0000010

    function XpressOptimizer(optimizer_type, MIPRELSTOP, )
        OpenAPI.validate_property(XpressOptimizer, Symbol("optimizer_type"), optimizer_type)
        OpenAPI.validate_property(XpressOptimizer, Symbol("MIPRELSTOP"), MIPRELSTOP)
        return new(optimizer_type, MIPRELSTOP, )
    end
end # type XpressOptimizer

const _property_types_XpressOptimizer = Dict{Symbol,String}(Symbol("optimizer_type")=>"String", Symbol("MIPRELSTOP")=>"Float64", )
OpenAPI.property_type(::Type{ XpressOptimizer }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_XpressOptimizer[name]))}

function check_required(o::XpressOptimizer)
    o.optimizer_type === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ XpressOptimizer }, name::Symbol, val)
end
